AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  data-migration-tool-backend

  Sample SAM Template for data-migration-tool-backend

Globals:
  Function:
    Timeout: 30
  Api:
    BinaryMediaTypes:
      - "multipart/form-data"
      - "application/json"

Resources:
  AccessTokensTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: AccessTokens
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: platformUrl
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: platformUrl
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  AuthCallbackFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/callback/
      Handler: app.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      Events:
        AuthCallbackGET:
          Type: Api
          Properties:
            Path: /callback
            Method: GET
        AuthCallbackPOST:
          Type: Api
          Properties:
            Path: /callback
            Method: POST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AccessTokensTable
      Environment:
        Variables:
          ACCESS_TOKEN_TABLE_NAME: AccessTokens
          CALLBACK_URI: https://jg2x5ta8g1.execute-api.us-east-2.amazonaws.com/Stage/callback
          FRONTEND_URL: http://localhost:3000/callback?access_token=

  CreateGroupsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/create-groups/
      Handler: app.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      Events:
        CreateGroups:
          Type: Api
          Properties:
            Path: /create-groups
            Method: POST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AccessTokensTable
      Environment:
        Variables:
          ACCESS_TOKEN_TABLE_NAME: AccessTokens
  CreateCoursesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/create-courses/
      Handler: app.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      Events:
        CreateCourses:
          Type: Api
          Properties:
            Path: /create-courses
            Method: POST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AccessTokensTable
      Environment:
        Variables:
          ACCESS_TOKEN_TABLE_NAME: AccessTokens
  CreateBranchesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/create-branches/
      Handler: app.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      Events:
        CreateBranches:
          Type: Api
          Properties:
            Path: /create-branches
            Method: POST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AccessTokensTable
      Environment:
        Variables:
          ACCESS_TOKEN_TABLE_NAME: AccessTokens
  CreateCatalogsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/create-catalogs/
      Handler: app.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      Events:
        CreateCatalogs:
          Type: Api
          Properties:
            Path: /create-catalogs
            Method: POST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AccessTokensTable
      Environment:
        Variables:
          ACCESS_TOKEN_TABLE_NAME: AccessTokens
  CreateEnrollmentsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/create-enrollments/
      Handler: app.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      Events:
        CreateEnrollments:
          Type: Api
          Properties:
            Path: /create-enrollments
            Method: POST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AccessTokensTable
      Environment:
        Variables:
          ACCESS_TOKEN_TABLE_NAME: AccessTokens

  ScanAccessTokenTableFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/scan-access-token-table/
      Handler: app.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      Events:
        ScanTable:
          Type: Api
          Properties:
            Path: /scan-table
            Method: GET
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref AccessTokensTable

Outputs:
  AuthCallbackFunction:
    Description: "Auth Callback Function ARN"
    Value: !GetAtt AuthCallbackFunction.Arn

  CreateGroupsFunction:
    Description: "Create Groups Function ARN"
    Value: !GetAtt CreateGroupsFunction.Arn

  CreateCoursesFunction:
    Description: "Create Courses Function ARN"
    Value: !GetAtt CreateCoursesFunction.Arn

  CreateBranchesFunction:
    Description: "Create Branches Function ARN"
    Value: !GetAtt CreateBranchesFunction.Arn

  CreateCatalogsFunction:
    Description: "Create Catalogs Function ARN"
    Value: !GetAtt CreateCatalogsFunction.Arn

  CreateEnrollmentsFunction:
    Description: "Create Enrollments Function ARN"
    Value: !GetAtt CreateEnrollmentsFunction.Arn

  ScanAccessTokenTableFunction:
    Description: "Scan Access Token Table Function ARN"
    Value: !GetAtt ScanAccessTokenTableFunction.Arn

  AccessTokensTable:
    Description: "DynamoDB Table for Access Tokens"
    Value: !Ref AccessTokensTable
